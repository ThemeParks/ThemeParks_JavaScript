/**
 * Theme Parks Wiki V1 API
 * api.themeparks.wiki
 *
 * The version of the OpenAPI document: 1.0.0-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityType from './EntityType';
import LiveQueue from './LiveQueue';
import LiveShowTime from './LiveShowTime';
import LiveStatusType from './LiveStatusType';

/**
 * The EntityLiveData model module.
 * @module model/EntityLiveData
 * @version 6.0.0
 */
class EntityLiveData {
    /**
     * Constructs a new <code>EntityLiveData</code>.
     * @alias module:model/EntityLiveData
     * @param id {String} 
     * @param name {String} 
     * @param entityType {module:model/EntityType} 
     * @param lastUpdated {Date} 
     */
    constructor(id, name, entityType, lastUpdated) { 
        
        EntityLiveData.initialize(this, id, name, entityType, lastUpdated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, entityType, lastUpdated) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['entityType'] = entityType;
        obj['lastUpdated'] = lastUpdated;
    }

    /**
     * Constructs a <code>EntityLiveData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityLiveData} obj Optional instance to populate.
     * @return {module:model/EntityLiveData} The populated <code>EntityLiveData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityLiveData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('entityType')) {
                obj['entityType'] = EntityType.constructFromObject(data['entityType']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = LiveStatusType.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = LiveQueue.constructFromObject(data['queue']);
            }
            if (data.hasOwnProperty('showtimes')) {
                obj['showtimes'] = ApiClient.convertToType(data['showtimes'], [LiveShowTime]);
            }
            if (data.hasOwnProperty('operatingHours')) {
                obj['operatingHours'] = ApiClient.convertToType(data['operatingHours'], [LiveShowTime]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
EntityLiveData.prototype['id'] = undefined;

/**
 * @member {String} name
 */
EntityLiveData.prototype['name'] = undefined;

/**
 * @member {module:model/EntityType} entityType
 */
EntityLiveData.prototype['entityType'] = undefined;

/**
 * @member {module:model/LiveStatusType} status
 */
EntityLiveData.prototype['status'] = undefined;

/**
 * @member {Date} lastUpdated
 */
EntityLiveData.prototype['lastUpdated'] = undefined;

/**
 * @member {module:model/LiveQueue} queue
 */
EntityLiveData.prototype['queue'] = undefined;

/**
 * @member {Array.<module:model/LiveShowTime>} showtimes
 */
EntityLiveData.prototype['showtimes'] = undefined;

/**
 * @member {Array.<module:model/LiveShowTime>} operatingHours
 */
EntityLiveData.prototype['operatingHours'] = undefined;






export default EntityLiveData;

